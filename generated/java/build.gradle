plugins {
    id "java-library"
    id "maven-publish"
}

group "cc.towerdefence.api"
version "1.0"

def grpcVersion = "1.50.2"
def protobufVersion = "3.21.7"
def protocVersion = protobufVersion

repositories {
    mavenCentral()
}

dependencies {
    protobuf("com.google.protobuf:protobuf-java:3.21.8")
    api("com.google.protobuf:protobuf-java:3.21.8")
    api("org.apache.tomcat:annotations-api:6.0.53")

    compileOnly("org.jetbrains:annotations:23.0.0")
    annotationProcessor("org.jetbrains:annotations:23.0.0")

    implementation("com.github.ben-manes.caffeine:caffeine:3.1.1")

    // spring autoconfiguration
    compileOnly("org.springframework.boot:spring-boot-starter:2.7.5")
    compileOnly("net.devh:grpc-server-spring-boot-starter:2.13.1.RELEASE") {
        exclude group: "io.grpc", module: "grpc-netty-shaded"
    }

    api("io.grpc:grpc-netty:${grpcVersion}")
    api("io.grpc:grpc-stub:${grpcVersion}")
    api("io.grpc:grpc-protobuf:${grpcVersion}")
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

publishing {

    repositories {
        maven {
            name = "development"
            url = uri("https://repo.towerdefence.cc/snapshots")
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_SECRET")
            }
        }
        maven {
            name = "release"
            url = uri("https://repo.towerdefence.cc/releases")
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_SECRET")
            }
        }
    }

    publications {
        maven(MavenPublication) {
            groupId = "cc.towerdefence.api"
            artifactId = "grpc-sdk"

            def commitHash = System.getenv("COMMIT_HASH_SHORT")
            def releaseVersion = System.getenv("RELEASE_VERSION")
            version = commitHash ?: releaseVersion ?: "local"

            from components.java
        }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs "build/generated/source/proto/main/grpc"
            srcDirs "build/generated/source/proto/main/java"
        }

        proto {
            srcDir "src/proto"
        }
    }
}
